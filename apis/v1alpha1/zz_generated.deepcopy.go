//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSVPCConfiguration) DeepCopyInto(out *AWSVPCConfiguration) {
	*out = *in
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSVPCConfiguration.
func (in *AWSVPCConfiguration) DeepCopy() *AWSVPCConfiguration {
	if in == nil {
		return nil
	}
	out := new(AWSVPCConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchArrayProperties) DeepCopyInto(out *BatchArrayProperties) {
	*out = *in
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchArrayProperties.
func (in *BatchArrayProperties) DeepCopy() *BatchArrayProperties {
	if in == nil {
		return nil
	}
	out := new(BatchArrayProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchContainerOverrides) DeepCopyInto(out *BatchContainerOverrides) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]*BatchEnvironmentVariable, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(BatchEnvironmentVariable)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.ResourceRequirements != nil {
		in, out := &in.ResourceRequirements, &out.ResourceRequirements
		*out = make([]*BatchResourceRequirement, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(BatchResourceRequirement)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchContainerOverrides.
func (in *BatchContainerOverrides) DeepCopy() *BatchContainerOverrides {
	if in == nil {
		return nil
	}
	out := new(BatchContainerOverrides)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchEnvironmentVariable) DeepCopyInto(out *BatchEnvironmentVariable) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchEnvironmentVariable.
func (in *BatchEnvironmentVariable) DeepCopy() *BatchEnvironmentVariable {
	if in == nil {
		return nil
	}
	out := new(BatchEnvironmentVariable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchJobDependency) DeepCopyInto(out *BatchJobDependency) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchJobDependency.
func (in *BatchJobDependency) DeepCopy() *BatchJobDependency {
	if in == nil {
		return nil
	}
	out := new(BatchJobDependency)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchResourceRequirement) DeepCopyInto(out *BatchResourceRequirement) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchResourceRequirement.
func (in *BatchResourceRequirement) DeepCopy() *BatchResourceRequirement {
	if in == nil {
		return nil
	}
	out := new(BatchResourceRequirement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchRetryStrategy) DeepCopyInto(out *BatchRetryStrategy) {
	*out = *in
	if in.Attempts != nil {
		in, out := &in.Attempts, &out.Attempts
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchRetryStrategy.
func (in *BatchRetryStrategy) DeepCopy() *BatchRetryStrategy {
	if in == nil {
		return nil
	}
	out := new(BatchRetryStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderStrategyItem) DeepCopyInto(out *CapacityProviderStrategyItem) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(int64)
		**out = **in
	}
	if in.CapacityProvider != nil {
		in, out := &in.CapacityProvider, &out.CapacityProvider
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderStrategyItem.
func (in *CapacityProviderStrategyItem) DeepCopy() *CapacityProviderStrategyItem {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderStrategyItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeadLetterConfig) DeepCopyInto(out *DeadLetterConfig) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeadLetterConfig.
func (in *DeadLetterConfig) DeepCopy() *DeadLetterConfig {
	if in == nil {
		return nil
	}
	out := new(DeadLetterConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ECSContainerOverride) DeepCopyInto(out *ECSContainerOverride) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(int64)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]*ECSEnvironmentVariable, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ECSEnvironmentVariable)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EnvironmentFiles != nil {
		in, out := &in.EnvironmentFiles, &out.EnvironmentFiles
		*out = make([]*ECSEnvironmentFile, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ECSEnvironmentFile)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(int64)
		**out = **in
	}
	if in.MemoryReservation != nil {
		in, out := &in.MemoryReservation, &out.MemoryReservation
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceRequirements != nil {
		in, out := &in.ResourceRequirements, &out.ResourceRequirements
		*out = make([]*ECSResourceRequirement, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ECSResourceRequirement)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ECSContainerOverride.
func (in *ECSContainerOverride) DeepCopy() *ECSContainerOverride {
	if in == nil {
		return nil
	}
	out := new(ECSContainerOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ECSEnvironmentFile) DeepCopyInto(out *ECSEnvironmentFile) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ECSEnvironmentFile.
func (in *ECSEnvironmentFile) DeepCopy() *ECSEnvironmentFile {
	if in == nil {
		return nil
	}
	out := new(ECSEnvironmentFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ECSEnvironmentVariable) DeepCopyInto(out *ECSEnvironmentVariable) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ECSEnvironmentVariable.
func (in *ECSEnvironmentVariable) DeepCopy() *ECSEnvironmentVariable {
	if in == nil {
		return nil
	}
	out := new(ECSEnvironmentVariable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ECSEphemeralStorage) DeepCopyInto(out *ECSEphemeralStorage) {
	*out = *in
	if in.SizeInGiB != nil {
		in, out := &in.SizeInGiB, &out.SizeInGiB
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ECSEphemeralStorage.
func (in *ECSEphemeralStorage) DeepCopy() *ECSEphemeralStorage {
	if in == nil {
		return nil
	}
	out := new(ECSEphemeralStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ECSInferenceAcceleratorOverride) DeepCopyInto(out *ECSInferenceAcceleratorOverride) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DeviceType != nil {
		in, out := &in.DeviceType, &out.DeviceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ECSInferenceAcceleratorOverride.
func (in *ECSInferenceAcceleratorOverride) DeepCopy() *ECSInferenceAcceleratorOverride {
	if in == nil {
		return nil
	}
	out := new(ECSInferenceAcceleratorOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ECSResourceRequirement) DeepCopyInto(out *ECSResourceRequirement) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ECSResourceRequirement.
func (in *ECSResourceRequirement) DeepCopy() *ECSResourceRequirement {
	if in == nil {
		return nil
	}
	out := new(ECSResourceRequirement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ECSTaskOverride) DeepCopyInto(out *ECSTaskOverride) {
	*out = *in
	if in.ContainerOverrides != nil {
		in, out := &in.ContainerOverrides, &out.ContainerOverrides
		*out = make([]*ECSContainerOverride, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ECSContainerOverride)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = new(ECSEphemeralStorage)
		(*in).DeepCopyInto(*out)
	}
	if in.ExecutionRoleARN != nil {
		in, out := &in.ExecutionRoleARN, &out.ExecutionRoleARN
		*out = new(string)
		**out = **in
	}
	if in.InferenceAcceleratorOverrides != nil {
		in, out := &in.InferenceAcceleratorOverrides, &out.InferenceAcceleratorOverrides
		*out = make([]*ECSInferenceAcceleratorOverride, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ECSInferenceAcceleratorOverride)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.TaskRoleARN != nil {
		in, out := &in.TaskRoleARN, &out.TaskRoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ECSTaskOverride.
func (in *ECSTaskOverride) DeepCopy() *ECSTaskOverride {
	if in == nil {
		return nil
	}
	out := new(ECSTaskOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Filter) DeepCopyInto(out *Filter) {
	*out = *in
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Filter.
func (in *Filter) DeepCopy() *Filter {
	if in == nil {
		return nil
	}
	out := new(Filter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterCriteria) DeepCopyInto(out *FilterCriteria) {
	*out = *in
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]*Filter, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Filter)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterCriteria.
func (in *FilterCriteria) DeepCopy() *FilterCriteria {
	if in == nil {
		return nil
	}
	out := new(FilterCriteria)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MQBrokerAccessCredentials) DeepCopyInto(out *MQBrokerAccessCredentials) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MQBrokerAccessCredentials.
func (in *MQBrokerAccessCredentials) DeepCopy() *MQBrokerAccessCredentials {
	if in == nil {
		return nil
	}
	out := new(MQBrokerAccessCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSKAccessCredentials) DeepCopyInto(out *MSKAccessCredentials) {
	*out = *in
	if in.ClientCertificateTLSAuth != nil {
		in, out := &in.ClientCertificateTLSAuth, &out.ClientCertificateTLSAuth
		*out = new(string)
		**out = **in
	}
	if in.SASLSCRAM512Auth != nil {
		in, out := &in.SASLSCRAM512Auth, &out.SASLSCRAM512Auth
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSKAccessCredentials.
func (in *MSKAccessCredentials) DeepCopy() *MSKAccessCredentials {
	if in == nil {
		return nil
	}
	out := new(MSKAccessCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfiguration) DeepCopyInto(out *NetworkConfiguration) {
	*out = *in
	if in.AWSVPCConfiguration != nil {
		in, out := &in.AWSVPCConfiguration, &out.AWSVPCConfiguration
		*out = new(AWSVPCConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfiguration.
func (in *NetworkConfiguration) DeepCopy() *NetworkConfiguration {
	if in == nil {
		return nil
	}
	out := new(NetworkConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pipe) DeepCopyInto(out *Pipe) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pipe.
func (in *Pipe) DeepCopy() *Pipe {
	if in == nil {
		return nil
	}
	out := new(Pipe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Pipe) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeEnrichmentHTTPParameters) DeepCopyInto(out *PipeEnrichmentHTTPParameters) {
	*out = *in
	if in.HeaderParameters != nil {
		in, out := &in.HeaderParameters, &out.HeaderParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PathParameterValues != nil {
		in, out := &in.PathParameterValues, &out.PathParameterValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringParameters != nil {
		in, out := &in.QueryStringParameters, &out.QueryStringParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeEnrichmentHTTPParameters.
func (in *PipeEnrichmentHTTPParameters) DeepCopy() *PipeEnrichmentHTTPParameters {
	if in == nil {
		return nil
	}
	out := new(PipeEnrichmentHTTPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeEnrichmentParameters) DeepCopyInto(out *PipeEnrichmentParameters) {
	*out = *in
	if in.HTTPParameters != nil {
		in, out := &in.HTTPParameters, &out.HTTPParameters
		*out = new(PipeEnrichmentHTTPParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.InputTemplate != nil {
		in, out := &in.InputTemplate, &out.InputTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeEnrichmentParameters.
func (in *PipeEnrichmentParameters) DeepCopy() *PipeEnrichmentParameters {
	if in == nil {
		return nil
	}
	out := new(PipeEnrichmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeList) DeepCopyInto(out *PipeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Pipe, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeList.
func (in *PipeList) DeepCopy() *PipeList {
	if in == nil {
		return nil
	}
	out := new(PipeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PipeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeSourceActiveMQBrokerParameters) DeepCopyInto(out *PipeSourceActiveMQBrokerParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(MQBrokerAccessCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.QueueName != nil {
		in, out := &in.QueueName, &out.QueueName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeSourceActiveMQBrokerParameters.
func (in *PipeSourceActiveMQBrokerParameters) DeepCopy() *PipeSourceActiveMQBrokerParameters {
	if in == nil {
		return nil
	}
	out := new(PipeSourceActiveMQBrokerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeSourceDynamoDBStreamParameters) DeepCopyInto(out *PipeSourceDynamoDBStreamParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.DeadLetterConfig != nil {
		in, out := &in.DeadLetterConfig, &out.DeadLetterConfig
		*out = new(DeadLetterConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaximumRecordAgeInSeconds != nil {
		in, out := &in.MaximumRecordAgeInSeconds, &out.MaximumRecordAgeInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaximumRetryAttempts != nil {
		in, out := &in.MaximumRetryAttempts, &out.MaximumRetryAttempts
		*out = new(int64)
		**out = **in
	}
	if in.OnPartialBatchItemFailure != nil {
		in, out := &in.OnPartialBatchItemFailure, &out.OnPartialBatchItemFailure
		*out = new(string)
		**out = **in
	}
	if in.ParallelizationFactor != nil {
		in, out := &in.ParallelizationFactor, &out.ParallelizationFactor
		*out = new(int64)
		**out = **in
	}
	if in.StartingPosition != nil {
		in, out := &in.StartingPosition, &out.StartingPosition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeSourceDynamoDBStreamParameters.
func (in *PipeSourceDynamoDBStreamParameters) DeepCopy() *PipeSourceDynamoDBStreamParameters {
	if in == nil {
		return nil
	}
	out := new(PipeSourceDynamoDBStreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeSourceKinesisStreamParameters) DeepCopyInto(out *PipeSourceKinesisStreamParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.DeadLetterConfig != nil {
		in, out := &in.DeadLetterConfig, &out.DeadLetterConfig
		*out = new(DeadLetterConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaximumRecordAgeInSeconds != nil {
		in, out := &in.MaximumRecordAgeInSeconds, &out.MaximumRecordAgeInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaximumRetryAttempts != nil {
		in, out := &in.MaximumRetryAttempts, &out.MaximumRetryAttempts
		*out = new(int64)
		**out = **in
	}
	if in.OnPartialBatchItemFailure != nil {
		in, out := &in.OnPartialBatchItemFailure, &out.OnPartialBatchItemFailure
		*out = new(string)
		**out = **in
	}
	if in.ParallelizationFactor != nil {
		in, out := &in.ParallelizationFactor, &out.ParallelizationFactor
		*out = new(int64)
		**out = **in
	}
	if in.StartingPosition != nil {
		in, out := &in.StartingPosition, &out.StartingPosition
		*out = new(string)
		**out = **in
	}
	if in.StartingPositionTimestamp != nil {
		in, out := &in.StartingPositionTimestamp, &out.StartingPositionTimestamp
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeSourceKinesisStreamParameters.
func (in *PipeSourceKinesisStreamParameters) DeepCopy() *PipeSourceKinesisStreamParameters {
	if in == nil {
		return nil
	}
	out := new(PipeSourceKinesisStreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeSourceManagedStreamingKafkaParameters) DeepCopyInto(out *PipeSourceManagedStreamingKafkaParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.ConsumerGroupID != nil {
		in, out := &in.ConsumerGroupID, &out.ConsumerGroupID
		*out = new(string)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(MSKAccessCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.StartingPosition != nil {
		in, out := &in.StartingPosition, &out.StartingPosition
		*out = new(string)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeSourceManagedStreamingKafkaParameters.
func (in *PipeSourceManagedStreamingKafkaParameters) DeepCopy() *PipeSourceManagedStreamingKafkaParameters {
	if in == nil {
		return nil
	}
	out := new(PipeSourceManagedStreamingKafkaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeSourceParameters) DeepCopyInto(out *PipeSourceParameters) {
	*out = *in
	if in.ActiveMQBrokerParameters != nil {
		in, out := &in.ActiveMQBrokerParameters, &out.ActiveMQBrokerParameters
		*out = new(PipeSourceActiveMQBrokerParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DynamoDBStreamParameters != nil {
		in, out := &in.DynamoDBStreamParameters, &out.DynamoDBStreamParameters
		*out = new(PipeSourceDynamoDBStreamParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.FilterCriteria != nil {
		in, out := &in.FilterCriteria, &out.FilterCriteria
		*out = new(FilterCriteria)
		(*in).DeepCopyInto(*out)
	}
	if in.KinesisStreamParameters != nil {
		in, out := &in.KinesisStreamParameters, &out.KinesisStreamParameters
		*out = new(PipeSourceKinesisStreamParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedStreamingKafkaParameters != nil {
		in, out := &in.ManagedStreamingKafkaParameters, &out.ManagedStreamingKafkaParameters
		*out = new(PipeSourceManagedStreamingKafkaParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.RabbitMQBrokerParameters != nil {
		in, out := &in.RabbitMQBrokerParameters, &out.RabbitMQBrokerParameters
		*out = new(PipeSourceRabbitMQBrokerParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SelfManagedKafkaParameters != nil {
		in, out := &in.SelfManagedKafkaParameters, &out.SelfManagedKafkaParameters
		*out = new(PipeSourceSelfManagedKafkaParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SQSQueueParameters != nil {
		in, out := &in.SQSQueueParameters, &out.SQSQueueParameters
		*out = new(PipeSourceSQSQueueParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeSourceParameters.
func (in *PipeSourceParameters) DeepCopy() *PipeSourceParameters {
	if in == nil {
		return nil
	}
	out := new(PipeSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeSourceRabbitMQBrokerParameters) DeepCopyInto(out *PipeSourceRabbitMQBrokerParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(MQBrokerAccessCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.QueueName != nil {
		in, out := &in.QueueName, &out.QueueName
		*out = new(string)
		**out = **in
	}
	if in.VirtualHost != nil {
		in, out := &in.VirtualHost, &out.VirtualHost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeSourceRabbitMQBrokerParameters.
func (in *PipeSourceRabbitMQBrokerParameters) DeepCopy() *PipeSourceRabbitMQBrokerParameters {
	if in == nil {
		return nil
	}
	out := new(PipeSourceRabbitMQBrokerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeSourceSQSQueueParameters) DeepCopyInto(out *PipeSourceSQSQueueParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeSourceSQSQueueParameters.
func (in *PipeSourceSQSQueueParameters) DeepCopy() *PipeSourceSQSQueueParameters {
	if in == nil {
		return nil
	}
	out := new(PipeSourceSQSQueueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeSourceSelfManagedKafkaParameters) DeepCopyInto(out *PipeSourceSelfManagedKafkaParameters) {
	*out = *in
	if in.AdditionalBootstrapServers != nil {
		in, out := &in.AdditionalBootstrapServers, &out.AdditionalBootstrapServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.ConsumerGroupID != nil {
		in, out := &in.ConsumerGroupID, &out.ConsumerGroupID
		*out = new(string)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(SelfManagedKafkaAccessConfigurationCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.ServerRootCaCertificate != nil {
		in, out := &in.ServerRootCaCertificate, &out.ServerRootCaCertificate
		*out = new(string)
		**out = **in
	}
	if in.StartingPosition != nil {
		in, out := &in.StartingPosition, &out.StartingPosition
		*out = new(string)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(SelfManagedKafkaAccessConfigurationVPC)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeSourceSelfManagedKafkaParameters.
func (in *PipeSourceSelfManagedKafkaParameters) DeepCopy() *PipeSourceSelfManagedKafkaParameters {
	if in == nil {
		return nil
	}
	out := new(PipeSourceSelfManagedKafkaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeSpec) DeepCopyInto(out *PipeSpec) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Enrichment != nil {
		in, out := &in.Enrichment, &out.Enrichment
		*out = new(string)
		**out = **in
	}
	if in.EnrichmentParameters != nil {
		in, out := &in.EnrichmentParameters, &out.EnrichmentParameters
		*out = new(PipeEnrichmentParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceParameters != nil {
		in, out := &in.SourceParameters, &out.SourceParameters
		*out = new(PipeSourceParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetParameters != nil {
		in, out := &in.TargetParameters, &out.TargetParameters
		*out = new(PipeTargetParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeSpec.
func (in *PipeSpec) DeepCopy() *PipeSpec {
	if in == nil {
		return nil
	}
	out := new(PipeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeStatus) DeepCopyInto(out *PipeStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.CurrentState != nil {
		in, out := &in.CurrentState, &out.CurrentState
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.StateReason != nil {
		in, out := &in.StateReason, &out.StateReason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeStatus.
func (in *PipeStatus) DeepCopy() *PipeStatus {
	if in == nil {
		return nil
	}
	out := new(PipeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeTargetBatchJobParameters) DeepCopyInto(out *PipeTargetBatchJobParameters) {
	*out = *in
	if in.ArrayProperties != nil {
		in, out := &in.ArrayProperties, &out.ArrayProperties
		*out = new(BatchArrayProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerOverrides != nil {
		in, out := &in.ContainerOverrides, &out.ContainerOverrides
		*out = new(BatchContainerOverrides)
		(*in).DeepCopyInto(*out)
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]*BatchJobDependency, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(BatchJobDependency)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.JobDefinition != nil {
		in, out := &in.JobDefinition, &out.JobDefinition
		*out = new(string)
		**out = **in
	}
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RetryStrategy != nil {
		in, out := &in.RetryStrategy, &out.RetryStrategy
		*out = new(BatchRetryStrategy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeTargetBatchJobParameters.
func (in *PipeTargetBatchJobParameters) DeepCopy() *PipeTargetBatchJobParameters {
	if in == nil {
		return nil
	}
	out := new(PipeTargetBatchJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeTargetCloudWatchLogsParameters) DeepCopyInto(out *PipeTargetCloudWatchLogsParameters) {
	*out = *in
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeTargetCloudWatchLogsParameters.
func (in *PipeTargetCloudWatchLogsParameters) DeepCopy() *PipeTargetCloudWatchLogsParameters {
	if in == nil {
		return nil
	}
	out := new(PipeTargetCloudWatchLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeTargetECSTaskParameters) DeepCopyInto(out *PipeTargetECSTaskParameters) {
	*out = *in
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]*CapacityProviderStrategyItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CapacityProviderStrategyItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EnableECSManagedTags != nil {
		in, out := &in.EnableECSManagedTags, &out.EnableECSManagedTags
		*out = new(bool)
		**out = **in
	}
	if in.EnableExecuteCommand != nil {
		in, out := &in.EnableExecuteCommand, &out.EnableExecuteCommand
		*out = new(bool)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.LaunchType != nil {
		in, out := &in.LaunchType, &out.LaunchType
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = new(NetworkConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Overrides != nil {
		in, out := &in.Overrides, &out.Overrides
		*out = new(ECSTaskOverride)
		(*in).DeepCopyInto(*out)
	}
	if in.PlacementConstraints != nil {
		in, out := &in.PlacementConstraints, &out.PlacementConstraints
		*out = make([]*PlacementConstraint, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PlacementConstraint)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.PlacementStrategy != nil {
		in, out := &in.PlacementStrategy, &out.PlacementStrategy
		*out = make([]*PlacementStrategy, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PlacementStrategy)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(string)
		**out = **in
	}
	if in.ReferenceID != nil {
		in, out := &in.ReferenceID, &out.ReferenceID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TaskCount != nil {
		in, out := &in.TaskCount, &out.TaskCount
		*out = new(int64)
		**out = **in
	}
	if in.TaskDefinitionARN != nil {
		in, out := &in.TaskDefinitionARN, &out.TaskDefinitionARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeTargetECSTaskParameters.
func (in *PipeTargetECSTaskParameters) DeepCopy() *PipeTargetECSTaskParameters {
	if in == nil {
		return nil
	}
	out := new(PipeTargetECSTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeTargetEventBridgeEventBusParameters) DeepCopyInto(out *PipeTargetEventBridgeEventBusParameters) {
	*out = *in
	if in.DetailType != nil {
		in, out := &in.DetailType, &out.DetailType
		*out = new(string)
		**out = **in
	}
	if in.EndpointID != nil {
		in, out := &in.EndpointID, &out.EndpointID
		*out = new(string)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeTargetEventBridgeEventBusParameters.
func (in *PipeTargetEventBridgeEventBusParameters) DeepCopy() *PipeTargetEventBridgeEventBusParameters {
	if in == nil {
		return nil
	}
	out := new(PipeTargetEventBridgeEventBusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeTargetHTTPParameters) DeepCopyInto(out *PipeTargetHTTPParameters) {
	*out = *in
	if in.HeaderParameters != nil {
		in, out := &in.HeaderParameters, &out.HeaderParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PathParameterValues != nil {
		in, out := &in.PathParameterValues, &out.PathParameterValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringParameters != nil {
		in, out := &in.QueryStringParameters, &out.QueryStringParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeTargetHTTPParameters.
func (in *PipeTargetHTTPParameters) DeepCopy() *PipeTargetHTTPParameters {
	if in == nil {
		return nil
	}
	out := new(PipeTargetHTTPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeTargetKinesisStreamParameters) DeepCopyInto(out *PipeTargetKinesisStreamParameters) {
	*out = *in
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeTargetKinesisStreamParameters.
func (in *PipeTargetKinesisStreamParameters) DeepCopy() *PipeTargetKinesisStreamParameters {
	if in == nil {
		return nil
	}
	out := new(PipeTargetKinesisStreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeTargetLambdaFunctionParameters) DeepCopyInto(out *PipeTargetLambdaFunctionParameters) {
	*out = *in
	if in.InvocationType != nil {
		in, out := &in.InvocationType, &out.InvocationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeTargetLambdaFunctionParameters.
func (in *PipeTargetLambdaFunctionParameters) DeepCopy() *PipeTargetLambdaFunctionParameters {
	if in == nil {
		return nil
	}
	out := new(PipeTargetLambdaFunctionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeTargetParameters) DeepCopyInto(out *PipeTargetParameters) {
	*out = *in
	if in.BatchJobParameters != nil {
		in, out := &in.BatchJobParameters, &out.BatchJobParameters
		*out = new(PipeTargetBatchJobParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLogsParameters != nil {
		in, out := &in.CloudWatchLogsParameters, &out.CloudWatchLogsParameters
		*out = new(PipeTargetCloudWatchLogsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ECSTaskParameters != nil {
		in, out := &in.ECSTaskParameters, &out.ECSTaskParameters
		*out = new(PipeTargetECSTaskParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.EventBridgeEventBusParameters != nil {
		in, out := &in.EventBridgeEventBusParameters, &out.EventBridgeEventBusParameters
		*out = new(PipeTargetEventBridgeEventBusParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPParameters != nil {
		in, out := &in.HTTPParameters, &out.HTTPParameters
		*out = new(PipeTargetHTTPParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.InputTemplate != nil {
		in, out := &in.InputTemplate, &out.InputTemplate
		*out = new(string)
		**out = **in
	}
	if in.KinesisStreamParameters != nil {
		in, out := &in.KinesisStreamParameters, &out.KinesisStreamParameters
		*out = new(PipeTargetKinesisStreamParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LambdaFunctionParameters != nil {
		in, out := &in.LambdaFunctionParameters, &out.LambdaFunctionParameters
		*out = new(PipeTargetLambdaFunctionParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.RedshiftDataParameters != nil {
		in, out := &in.RedshiftDataParameters, &out.RedshiftDataParameters
		*out = new(PipeTargetRedshiftDataParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SageMakerPipelineParameters != nil {
		in, out := &in.SageMakerPipelineParameters, &out.SageMakerPipelineParameters
		*out = new(PipeTargetSageMakerPipelineParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SQSQueueParameters != nil {
		in, out := &in.SQSQueueParameters, &out.SQSQueueParameters
		*out = new(PipeTargetSQSQueueParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.StepFunctionStateMachineParameters != nil {
		in, out := &in.StepFunctionStateMachineParameters, &out.StepFunctionStateMachineParameters
		*out = new(PipeTargetStateMachineParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeTargetParameters.
func (in *PipeTargetParameters) DeepCopy() *PipeTargetParameters {
	if in == nil {
		return nil
	}
	out := new(PipeTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeTargetRedshiftDataParameters) DeepCopyInto(out *PipeTargetRedshiftDataParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DBUser != nil {
		in, out := &in.DBUser, &out.DBUser
		*out = new(string)
		**out = **in
	}
	if in.SecretManagerARN != nil {
		in, out := &in.SecretManagerARN, &out.SecretManagerARN
		*out = new(string)
		**out = **in
	}
	if in.SQLs != nil {
		in, out := &in.SQLs, &out.SQLs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StatementName != nil {
		in, out := &in.StatementName, &out.StatementName
		*out = new(string)
		**out = **in
	}
	if in.WithEvent != nil {
		in, out := &in.WithEvent, &out.WithEvent
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeTargetRedshiftDataParameters.
func (in *PipeTargetRedshiftDataParameters) DeepCopy() *PipeTargetRedshiftDataParameters {
	if in == nil {
		return nil
	}
	out := new(PipeTargetRedshiftDataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeTargetSQSQueueParameters) DeepCopyInto(out *PipeTargetSQSQueueParameters) {
	*out = *in
	if in.MessageDeduplicationID != nil {
		in, out := &in.MessageDeduplicationID, &out.MessageDeduplicationID
		*out = new(string)
		**out = **in
	}
	if in.MessageGroupID != nil {
		in, out := &in.MessageGroupID, &out.MessageGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeTargetSQSQueueParameters.
func (in *PipeTargetSQSQueueParameters) DeepCopy() *PipeTargetSQSQueueParameters {
	if in == nil {
		return nil
	}
	out := new(PipeTargetSQSQueueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeTargetSageMakerPipelineParameters) DeepCopyInto(out *PipeTargetSageMakerPipelineParameters) {
	*out = *in
	if in.PipelineParameterList != nil {
		in, out := &in.PipelineParameterList, &out.PipelineParameterList
		*out = make([]*SageMakerPipelineParameter, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(SageMakerPipelineParameter)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeTargetSageMakerPipelineParameters.
func (in *PipeTargetSageMakerPipelineParameters) DeepCopy() *PipeTargetSageMakerPipelineParameters {
	if in == nil {
		return nil
	}
	out := new(PipeTargetSageMakerPipelineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipeTargetStateMachineParameters) DeepCopyInto(out *PipeTargetStateMachineParameters) {
	*out = *in
	if in.InvocationType != nil {
		in, out := &in.InvocationType, &out.InvocationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipeTargetStateMachineParameters.
func (in *PipeTargetStateMachineParameters) DeepCopy() *PipeTargetStateMachineParameters {
	if in == nil {
		return nil
	}
	out := new(PipeTargetStateMachineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pipe_SDK) DeepCopyInto(out *Pipe_SDK) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = (*in).DeepCopy()
	}
	if in.CurrentState != nil {
		in, out := &in.CurrentState, &out.CurrentState
		*out = new(string)
		**out = **in
	}
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Enrichment != nil {
		in, out := &in.Enrichment, &out.Enrichment
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = (*in).DeepCopy()
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.StateReason != nil {
		in, out := &in.StateReason, &out.StateReason
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pipe_SDK.
func (in *Pipe_SDK) DeepCopy() *Pipe_SDK {
	if in == nil {
		return nil
	}
	out := new(Pipe_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraint) DeepCopyInto(out *PlacementConstraint) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraint.
func (in *PlacementConstraint) DeepCopy() *PlacementConstraint {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementStrategy) DeepCopyInto(out *PlacementStrategy) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementStrategy.
func (in *PlacementStrategy) DeepCopy() *PlacementStrategy {
	if in == nil {
		return nil
	}
	out := new(PlacementStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SageMakerPipelineParameter) DeepCopyInto(out *SageMakerPipelineParameter) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SageMakerPipelineParameter.
func (in *SageMakerPipelineParameter) DeepCopy() *SageMakerPipelineParameter {
	if in == nil {
		return nil
	}
	out := new(SageMakerPipelineParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelfManagedKafkaAccessConfigurationCredentials) DeepCopyInto(out *SelfManagedKafkaAccessConfigurationCredentials) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateTLSAuth != nil {
		in, out := &in.ClientCertificateTLSAuth, &out.ClientCertificateTLSAuth
		*out = new(string)
		**out = **in
	}
	if in.SASLSCRAM256Auth != nil {
		in, out := &in.SASLSCRAM256Auth, &out.SASLSCRAM256Auth
		*out = new(string)
		**out = **in
	}
	if in.SASLSCRAM512Auth != nil {
		in, out := &in.SASLSCRAM512Auth, &out.SASLSCRAM512Auth
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelfManagedKafkaAccessConfigurationCredentials.
func (in *SelfManagedKafkaAccessConfigurationCredentials) DeepCopy() *SelfManagedKafkaAccessConfigurationCredentials {
	if in == nil {
		return nil
	}
	out := new(SelfManagedKafkaAccessConfigurationCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelfManagedKafkaAccessConfigurationVPC) DeepCopyInto(out *SelfManagedKafkaAccessConfigurationVPC) {
	*out = *in
	if in.SecurityGroup != nil {
		in, out := &in.SecurityGroup, &out.SecurityGroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelfManagedKafkaAccessConfigurationVPC.
func (in *SelfManagedKafkaAccessConfigurationVPC) DeepCopy() *SelfManagedKafkaAccessConfigurationVPC {
	if in == nil {
		return nil
	}
	out := new(SelfManagedKafkaAccessConfigurationVPC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tag) DeepCopyInto(out *Tag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tag.
func (in *Tag) DeepCopy() *Tag {
	if in == nil {
		return nil
	}
	out := new(Tag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePipeSourceActiveMQBrokerParameters) DeepCopyInto(out *UpdatePipeSourceActiveMQBrokerParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(MQBrokerAccessCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePipeSourceActiveMQBrokerParameters.
func (in *UpdatePipeSourceActiveMQBrokerParameters) DeepCopy() *UpdatePipeSourceActiveMQBrokerParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePipeSourceActiveMQBrokerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePipeSourceDynamoDBStreamParameters) DeepCopyInto(out *UpdatePipeSourceDynamoDBStreamParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.DeadLetterConfig != nil {
		in, out := &in.DeadLetterConfig, &out.DeadLetterConfig
		*out = new(DeadLetterConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaximumRecordAgeInSeconds != nil {
		in, out := &in.MaximumRecordAgeInSeconds, &out.MaximumRecordAgeInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaximumRetryAttempts != nil {
		in, out := &in.MaximumRetryAttempts, &out.MaximumRetryAttempts
		*out = new(int64)
		**out = **in
	}
	if in.OnPartialBatchItemFailure != nil {
		in, out := &in.OnPartialBatchItemFailure, &out.OnPartialBatchItemFailure
		*out = new(string)
		**out = **in
	}
	if in.ParallelizationFactor != nil {
		in, out := &in.ParallelizationFactor, &out.ParallelizationFactor
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePipeSourceDynamoDBStreamParameters.
func (in *UpdatePipeSourceDynamoDBStreamParameters) DeepCopy() *UpdatePipeSourceDynamoDBStreamParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePipeSourceDynamoDBStreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePipeSourceKinesisStreamParameters) DeepCopyInto(out *UpdatePipeSourceKinesisStreamParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.DeadLetterConfig != nil {
		in, out := &in.DeadLetterConfig, &out.DeadLetterConfig
		*out = new(DeadLetterConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaximumRecordAgeInSeconds != nil {
		in, out := &in.MaximumRecordAgeInSeconds, &out.MaximumRecordAgeInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaximumRetryAttempts != nil {
		in, out := &in.MaximumRetryAttempts, &out.MaximumRetryAttempts
		*out = new(int64)
		**out = **in
	}
	if in.OnPartialBatchItemFailure != nil {
		in, out := &in.OnPartialBatchItemFailure, &out.OnPartialBatchItemFailure
		*out = new(string)
		**out = **in
	}
	if in.ParallelizationFactor != nil {
		in, out := &in.ParallelizationFactor, &out.ParallelizationFactor
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePipeSourceKinesisStreamParameters.
func (in *UpdatePipeSourceKinesisStreamParameters) DeepCopy() *UpdatePipeSourceKinesisStreamParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePipeSourceKinesisStreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePipeSourceManagedStreamingKafkaParameters) DeepCopyInto(out *UpdatePipeSourceManagedStreamingKafkaParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(MSKAccessCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePipeSourceManagedStreamingKafkaParameters.
func (in *UpdatePipeSourceManagedStreamingKafkaParameters) DeepCopy() *UpdatePipeSourceManagedStreamingKafkaParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePipeSourceManagedStreamingKafkaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePipeSourceParameters) DeepCopyInto(out *UpdatePipeSourceParameters) {
	*out = *in
	if in.ActiveMQBrokerParameters != nil {
		in, out := &in.ActiveMQBrokerParameters, &out.ActiveMQBrokerParameters
		*out = new(UpdatePipeSourceActiveMQBrokerParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DynamoDBStreamParameters != nil {
		in, out := &in.DynamoDBStreamParameters, &out.DynamoDBStreamParameters
		*out = new(UpdatePipeSourceDynamoDBStreamParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.FilterCriteria != nil {
		in, out := &in.FilterCriteria, &out.FilterCriteria
		*out = new(FilterCriteria)
		(*in).DeepCopyInto(*out)
	}
	if in.KinesisStreamParameters != nil {
		in, out := &in.KinesisStreamParameters, &out.KinesisStreamParameters
		*out = new(UpdatePipeSourceKinesisStreamParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedStreamingKafkaParameters != nil {
		in, out := &in.ManagedStreamingKafkaParameters, &out.ManagedStreamingKafkaParameters
		*out = new(UpdatePipeSourceManagedStreamingKafkaParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.RabbitMQBrokerParameters != nil {
		in, out := &in.RabbitMQBrokerParameters, &out.RabbitMQBrokerParameters
		*out = new(UpdatePipeSourceRabbitMQBrokerParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SelfManagedKafkaParameters != nil {
		in, out := &in.SelfManagedKafkaParameters, &out.SelfManagedKafkaParameters
		*out = new(UpdatePipeSourceSelfManagedKafkaParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SQSQueueParameters != nil {
		in, out := &in.SQSQueueParameters, &out.SQSQueueParameters
		*out = new(UpdatePipeSourceSQSQueueParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePipeSourceParameters.
func (in *UpdatePipeSourceParameters) DeepCopy() *UpdatePipeSourceParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePipeSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePipeSourceRabbitMQBrokerParameters) DeepCopyInto(out *UpdatePipeSourceRabbitMQBrokerParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(MQBrokerAccessCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePipeSourceRabbitMQBrokerParameters.
func (in *UpdatePipeSourceRabbitMQBrokerParameters) DeepCopy() *UpdatePipeSourceRabbitMQBrokerParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePipeSourceRabbitMQBrokerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePipeSourceSQSQueueParameters) DeepCopyInto(out *UpdatePipeSourceSQSQueueParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePipeSourceSQSQueueParameters.
func (in *UpdatePipeSourceSQSQueueParameters) DeepCopy() *UpdatePipeSourceSQSQueueParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePipeSourceSQSQueueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePipeSourceSelfManagedKafkaParameters) DeepCopyInto(out *UpdatePipeSourceSelfManagedKafkaParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(SelfManagedKafkaAccessConfigurationCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.ServerRootCaCertificate != nil {
		in, out := &in.ServerRootCaCertificate, &out.ServerRootCaCertificate
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(SelfManagedKafkaAccessConfigurationVPC)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePipeSourceSelfManagedKafkaParameters.
func (in *UpdatePipeSourceSelfManagedKafkaParameters) DeepCopy() *UpdatePipeSourceSelfManagedKafkaParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePipeSourceSelfManagedKafkaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationExceptionField) DeepCopyInto(out *ValidationExceptionField) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationExceptionField.
func (in *ValidationExceptionField) DeepCopy() *ValidationExceptionField {
	if in == nil {
		return nil
	}
	out := new(ValidationExceptionField)
	in.DeepCopyInto(out)
	return out
}
